# generated by datamodel-codegen:
#   filename:  schema.json
#   timestamp: 2025-10-09T17:03:26+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Position(Enum):
    UNSELECTED = 'UNSELECTED'
    FILL = 'FILL'
    TOP = 'TOP'
    JUNGLE = 'JUNGLE'
    MIDDLE = 'MIDDLE'
    BOTTOM = 'BOTTOM'
    UTILITY = 'UTILITY'


class Role(Enum):
    CAPTAIN = 'CAPTAIN'
    MEMBER = 'MEMBER'


class PlayerDto(BaseModel):
    puuid: str
    teamId: Optional[str] = None
    position: Position = Field(
        ...,
        description='(Legal values:  UNSELECTED,  FILL,  TOP,  JUNGLE,  MIDDLE,  BOTTOM,  UTILITY)',
    )
    role: Role = Field(..., description='(Legal values:  CAPTAIN,  MEMBER)')


class TeamDto(BaseModel):
    id: str
    tournamentId: int
    name: str
    iconId: int
    tier: int
    captain: str = Field(..., description='Summoner ID of the team captain.')
    abbreviation: str
    players: List[PlayerDto] = Field(..., description='Team members.')


class TournamentPhaseDto(BaseModel):
    id: int
    registrationTime: int
    startTime: int
    cancelled: bool


class TournamentDto(BaseModel):
    id: int
    themeId: int
    nameKey: str
    nameKeySecondary: str
    schedule: List[TournamentPhaseDto] = Field(..., description='Tournament phase.')
